#version 430 core

layout (std430, binding = 0) restrict readonly buffer BoidIn {
  vec4 boidIn[];
};

layout (std430, binding = 3) restrict buffer BoidOffsets {
  uint boidOffsets[];
};

layout (std430, binding = 5) restrict writeonly buffer BoidIndex {
  uint boidIndex[];
};

layout (std140, binding = 0) uniform SimParams {
  mat4 projection;
  vec2 winScale;
  uvec2 cellCounts;
  uint numBoids, cellCount;
  float cellSize, mapRatio,
    edgeDist, edgeFactor,
    separateDist2, separateFactor,
    alignDist2, alignFactor,
    attractDist2, attractFactor,
    maxSpeed;
};

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

void main() {
  uint x = gl_GlobalInvocationID.x;

  if (x >= numBoids) return;

  uvec2 cell = uvec2(boidIn[x].xy * mapRatio);
  uint cellNum = (cell.x + cell.y * cellCounts.x) % cellCount;

  uint offset = atomicAdd(boidOffsets[cellNum], 1);
  boidIndex[offset] = x;
}
