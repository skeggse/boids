#include "../src/uniforms.h"

layout (std430, binding = 0) restrict readonly buffer BoidIn {
  vec4 boidIn[];
};

layout (std430, binding = 3) restrict buffer BoidOffsets {
  uint boidOffsets[];
};

layout (std430, binding = 5) restrict writeonly buffer BoidIndex {
  uint boidIndex[];
};

layout (local_size_x = 128) in;

void main() {
  uint x = gl_GlobalInvocationID.x;

  if (x >= numBoids) return;

  uvec2 cell = uvec2(boidIn[x].xy * mapRatio);
  uint cellNum = (cell.x + cell.y * cellCounts.x) % cellCount;

  uint offset = atomicAdd(boidOffsets[cellNum], 1);
  boidIndex[offset] = x;
}
